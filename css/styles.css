/* 
========================
Fonts
========================
*/
@import url("https://fonts.googleapis.com/css?family=Catamaran:400,700|Grand+Hotel");

/* 
========================
 Variables
=========================
*/

:root {
  --clr-primary: #678e3e;
  --clr-primary-light: #beed8c;
  --clr-grey-1: #102a42;
  --clr-grey-5: #617d98;
  --clr-grey-10: #f1f5f8;
  --clr-white: #fff;
  --ff-primary: "Catamaran", sans-serif;
  --ff-secondary: "Grand Hotel", cursive;
  --transition: all 2s linear;
  --spacing: 0.25rem;
  --radius: 0.5rem;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* css box-sizing property allow us to include padding and border in an element's total width and height */
}

body {
  font-family: var(--ff-primary);
  background: var(--clr-white);
  color: var(--clr-grey-1);
  line-height: 1.5;
  font-size: 0.875rem;
  /* smaller font-size as we are initially setting style for a smaller screen and then can change or resize it in media queries for bigger screen sizes. */
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  display: block;
}

h1,
h2,
h3,
h4 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
}

/* setting font size for all headers for small screen size */
h1 {
  font-size: 3rem;
}
h2 {
  font-size: 2rem;
}
h3 {
  font-size: 1.5rem;
}
h4 {
  font-size: 0.875rem;
}
p {
  font-size: 1.25rem;
}

/* increasing font size for headers and body on bigger screen size using media query!! */
@media screen and (min-width: 800px) {
  h1 {
    font-size: 3rem;
  }
  h2 {
    font-size: 2.5rem;
  }
  h3 {
    font-size: 2rem;
  }
  h4 {
    font-size: 1rem;
  }
  body {
    font-size: 1rem;
  }
  h1,
  h2,
  h3,
  h4 {
    line-height: 1;
  }
}

/* More global css */

/* general styles for button with .btn class which we can later use in other projects as well
change font-size n all later in main banner-btn to make changes for this project only by overriding few properties */
.btn {
  text-transform: uppercase;
  padding: 0.375rem 0.75rem;
  background-color: var(--clr-primary);
  color: var(--clr-white);
  letter-spacing: var(--spacing);
  /* just in case in future u want to give margins to it display inline-block */
  display: inline-block;
  font-weight: 700;
  transition: var(--transition);
  font-size: 0.875rem;
  border: none;
  cursor: pointer;
  /* box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2); */
  /* this box-shadow here is just for a general style not for banner-btn */
}

.btn:hover {
  color: var(--clr-primary);
  background-color: var(--clr-primary-light);
}

/* problem with floAT is it takes element out of normal flow and wrap elements around it that comes after it!! and so if here there were only 3 skills, and a heading after it then on bigger screen size there would have been 3 skills column and one heading column as it would have wrapped around in the end too!!*/
/* qucikfix is to use clearfix---- */

.clearfix::after,
.clearfix::before {
  content: "";
  clear: both;
  display: table;
}

/* ====================== 
Navbar
================*/
.nav-btn {
  position: fixed;
  top: 5%;
  left: 5%;
  font-size: 2.5rem;
  color: var(--clr-primary);
  z-index: 1;
  animation: bounce 2s ease infinite;
  cursor: pointer;
}
@keyframes bounce {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(2);
  }
  100% {
    transform: scale(1);
  }
}

/* =====================
navbar ul 
========================*/
.navbar {
  position: fixed;
  /* now we have two options here to make navbar span all across screen on small screen size
  first is to make all top/left/bottom/right:0 and then give  a higher z index
  or we can give one starting point such as top:0 left:0 and then set height width to 100% */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* width: 100%;
  height: 100%; */
  background: var(--clr-grey-10);
  z-index: 2;
  box-shadow: 2px 0 2px rgba(0, 0, 0, 0.2);
  /* hide navbar initially */
  transform: translateX(-100%);
  transition: var(--transition);
}

.showNav {
  transform: translate(0);
}
.navbar-header {
  text-align: right;
  padding-right: 1rem;
}
.nav-close {
  font-size: 2.5rem;
  cursor: pointer;
  color: #f29c9c;
  transition: var(--transition);
}
.nav-close:hover {
  color: #bb2525;
}
.nav-items {
  list-style-type: none;
}
.nav-link {
  display: block;
  font-size: 1.5rem;
  padding: 0.25rem 1rem;
  text-transform: uppercase;
  letter-spacing: var(--spacing);
  color: var(--clr-grey-5);
  transition: var(--transition);
}
.nav-link:hover {
  background: var(--clr-primary-light);
  color: var(--clr-primary);
  padding-left: 1.5rem;
  border-left: 0.25rem solid var(--clr-primary);
}
@media screen and (min-width: 768px) {
  .navbar {
    width: 30vw;
    max-width: 20rem;
  }
}

/*========================
 Header
=========================
*/
.header {
  min-height: 100vh;
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.4)),
    url("../images/main-bcg.jpeg");
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  position: relative;
  overflow-x: hidden;
  /* to avoid scroll in case of animation we have set 
   overflow-x: hidden; */
}

.banner {
  text-align: center;
  /* now give position:absolute  in order to give the top and bottom to it and to make position:absolute work we need a parent element with position:relative i.e. for header posititon: relative*/
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.banner h2 {
  font-family: var(--ff-secondary);
  color: var(--clr-primary);
  animation: slideFromRight 5s ease-in-out 1;
  /* animation */
}
@keyframes slideFromRight {
  0% {
    transform: translateX(100%);
    opacity: 0;
  }
  50% {
    transform: translateX(-100%);
    opacity: 0.75;
  }

  100% {
    transform: translateX(0%);
    opacity: 1;
  }
}

.banner h1 {
  color: var(--clr-white);
  text-transform: uppercase;
  margin-top: 1.25rem;
  margin-bottom: 2rem;
  /* animation */
  animation: slideFromLeft 5s ease-in-out 1 backwards;
}
@keyframes slideFromLeft {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  50% {
    transform: translateX(100%);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0%);
    opacity: 1;
  }
}

.banner-btn {
  outline: 0.125rem solid var(--clr-primary);
  outline-offset: 0.25rem;
  font-size: 1.25rem;
  /* make this button a bit bigger then others by increasing its padding!! */
  padding: 1rem 1.75rem;
  animation: scale 3s linear 1;
}
@keyframes scale {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0.75;
    transform: scale(1.5);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* content divider linear gradient!! */
.content-divider {
  height: 0.5rem;
  background: linear-gradient(
    to left,
    var(--clr-primary),
    #e9b949,
    var(--clr-primary-light)
  );
}
/* ====================
  skills section
=======================
*/
.skills {
  background-color: var(--clr-grey-10);
}

.skill {
  text-align: center;
  padding: 2.5rem 0;
  transition: var(--transition);
}

/* icons */
.skill-icon {
  color: var(--clr-primary);
  font-size: 3rem;
  display: inline-block;
  margin-bottom: 1.25rem;
  /* now to make this margin-bottom work change span display to inline-block as span is an inline element and thus top bottom margins wont work or respect by browser */
  transition: var(--transition);
}

.skill-title {
  letter-spacing: var(--spacing);
  color: black;
  margin-bottom: 0.75rem;
  text-transform: capitalize;
}

.skill-text {
  color: var(--clr-grey-5);
  max-width: 17rem;
  /* since we do not want the paragraph to span all across but to take multiple lines we can give a certain max-width to it */
  /* also bt doing so text-align center wont work for it
  so now set margin: 0 auto; for it */
  margin: 0 auto;
}

.skill:hover {
  background-color: var(--clr-white);
  box-shadow: 0 2px var(--clr-primary);
}

.skill:hover .skill-icon {
  transform: translateY(-5px);
}

@media screen and (min-width: 576px) {
  .skill {
    float: left;
    width: 50%;
  }
}

@media screen and (min-width: 992px) {
  .skill {
    /* here u dont need to right float:left;
    as its already so with screen size 576px and above!! */
    width: 25%;
  }
}

/* ===================
About section
======================*/
.about-picture-container {
  background: var(--clr-primary);
  border: 0.5rem solid var(--clr-primary);
  max-width: 30rem;
  overflow: hidden;
}

.about-picture {
  /* display: inline-block; */
  transition: var(--transition);
}
/* extra stuff */
.about-picture-container:hover .about-picture {
  opacity: 0.5;
  transform: scale(1.2);
}

.about-img,
.about-info {
  padding: 2rem 0;
}
.section-title h3 {
  color: var(--clr-primary);
  font-family: var(--ff-secondary);
}
.section-title {
  margin-bottom: 2rem;
}
.section-center {
  /* border: 2px solid red; */
  width: 85vw;
  margin: 0 auto;
  max-width: 1170px;
  padding: 4rem 0;
}
.section-title h2 {
  color: var(--clr-grey-1);
  margin-bottom: 2.5rem;
}

.section-title p {
  color: var(--clr-grey-5);
  max-width: 26rem;
  margin-bottom: 1rem;
}

@media screen and (min-width: 992px) {
  .about-img,
  .about-info {
    float: left;
    width: 50%;
  }
  .about-info {
    padding-left: 2rem;
  }
}

/* =========================
Products
===========================*/
.products {
  background-color: var(--clr-grey-10);
}
.products article {
  padding: 2rem 0;
}
.product-text {
  color: var(--clr-grey-5);
  margin-bottom: 1rem;
  max-width: 26rem;
}
.product {
  margin-bottom: 2rem;
}
.product-img {
  margin-bottom: 2rem;
  border-radius: var(--radius);
  height: 17rem;
  /* border: none;  */
  object-fit: cover;
}
.product-title {
  font-size: 0.85rem;
}
.product-price {
  color: var(--clr-primary);
}

@media screen and (min-width: 768px) {
  .product {
    float: left;
    width: 50%;
    padding-right: 2rem;
  }
}

@media screen and (min-width: 992px) {
  .product {
    width: 33.3%;
  }
}

@media screen and (min-width: 1200px) {
  .products-info {
    float: left;
    width: 30%;
  }
  .products-inventory {
    float: left;
    width: 70%;
    /* margin-left: 2rem; */
    /* for above to work we have to decrease width for either info or inventory to keep them both 30:70 ratio remove margin-bottom from products in inventory and simply add padding left right btw them */
    /* can simply arrange with margin-left or can remove margin-bottom from product as now elements are side to side on bigger screen no need of margin-bottom */
    /* and to make room btw info and inventory u can simply add padding left right btw products in inventory */
  }
  .product {
    margin-bottom: 0rem;
    padding: 0 1rem;
  }
}

/* =====================
services
========================*/
.services {
  background-color: var(--clr-white);
  /* text-align: center;
  padding: 1rem 0;
  max-width: 85vw;
  margin: 0 auto; */
  /* do not need to do all above as its already there in our global class section-center just need to do service title to center as done below */
}
.services-title {
  margin-top: 4rem;
  margin-bottom: -4rem;
  /* margin:bottom negative here as service title as for services we have a global class of section-center which has a padding of 4rem 0; so to make the distance btw these less add negative margin-bottom for services title  */
  text-align: center;
}

.service-card {
  /* text-align: center; */
  background-color: var(--clr-grey-10);
  margin-bottom: 2rem;
  border-radius: var(--radius);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transition);
}
.service-card:hover {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  transform: scale(1.02);
}
.service-img {
  object-fit: cover;
  height: 17rem;
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}
.service-info {
  text-align: center;
  padding: 2.5rem 1rem 1.5rem 1rem;
}
.service-info p {
  color: var(--clr-grey-5);
  max-width: 25rem;
  margin: 0 auto;
}
.service-btn {
  text-transform: capitalize;
  font-size: 0.75rem;
  border-radius: var(--radius);
  font-weight: 400;
  padding: 0.375rem 0.5rem;
  margin-top: 1rem;
}

@media screen and (min-width: 768px) {
  .service-card {
    float: left;
    /* here lets use margins not padding to give widths to the cards */
    /* 100%total 45%one card 90%2card 5% margin */
    width: 45%;
    margin-right: 5%;
  }
}

@media screen and (min-width: 1200px) {
  .service-card {
    width: 30%;
    /* 30+30+30=90cards 10% margin */
    margin-right: 3.33%;
  }
}
.service-image-container {
  position: relative;
}
.service-icon {
  position: absolute;
  left: 50%;
  /* top: 0; */
  bottom: 0%;
  color: var(--clr-primary);
  font-size: 2rem;
  background: var(--clr-primary-light);
  padding: 0.25rem 0.6rem;
  border-radius: 50%;
  /* NOW WE WANT TO MOVE IT TO LEFT TO CENTER IT SO USE -50% to move it to left and 50% to move it down of its 50%width to center it completely*/
  transform: translate(-50%, 50%);
  /* transition: var(--transition); */
  border: 0.375rem solid var(--clr-grey-10);
}

/* ==========================
contact
=============================*/
.contact {
  background-color: var(--clr-grey-10);
}
.contact-form,
.contact-info {
  margin: 1rem 0;
}
.contact-item {
  margin-bottom: 1.75rem;
}
.contact-title {
  color: var(--clr-primary);
  font-weight: 400;
  letter-spacing: var(--spacing);
}
.contact-text {
  text-transform: uppercase;
}

/* =========================
contact-form
===========================*/

.contact-form {
  background-color: var(--clr-white);
  border-radius: var(--radius);
  text-align: center;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transition);
  max-width: 33rem;
}
.contact-form:hover {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.contact-form h3 {
  /* text-align: center; */
  /* not required as we did so in contact-form */
  color: var(--clr-grey-5);
  padding-top: 1.25rem;
}

.form-control {
  display: block;
  width: 95%;
  background-color: var(--clr-grey-10);
  padding: 1rem 1.5rem;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
  border-radius: var(--radius);
  border: none;
  letter-spacing: var(--spacing);
}
.form-control::placeholder {
  /* try to pass all the styles u want it to follow */
  font-family: var(--ff-primary);
  color: var(--clr-grey-1);
  letter-spacing: var(--spacing);
  text-transform: uppercase;
}
.form-group {
  margin-left: 1rem;
  /* padding: 1rem 1.5rem; */
}

.submit-btn {
  display: block;
  width: 100%;
  border-bottom-right-radius: var(--radius);
  border-bottom-left-radius: var(--radius);
  padding: 1rem;
}

@media screen and (min-width: 992px) {
  .contact-form,
  .contact-info {
    width: 50%;
    float: left;
  }
}

/* =======================
footer
====================*/
.footer {
  background-color: #222;
  text-align: center;
  /* color: var(--clr-white); */
}
.social-icon {
  color: var(--clr-white);
  font-size: 1.5rem;
  margin-right: 1rem;
  transition: var(--transition);
}
.social-icon:hover {
  color: var(--clr-primary);
}
.footer-text {
  margin-top: 1.25rem;
  text-transform: uppercase;
  color: var(--clr-white);
  font-weight: 400;
}
.company {
  color: var(--clr-primary);
}
